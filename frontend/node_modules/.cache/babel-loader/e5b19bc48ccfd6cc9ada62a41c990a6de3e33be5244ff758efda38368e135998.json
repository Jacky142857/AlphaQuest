{"ast":null,"code":"var _jsxFileName = \"/Users/bianyuqi/Desktop/alpha_quest/frontend/src/components/DataUpload.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/DataUpload.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataUpload = ({\n  onDataUploaded\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [dragOver, setDragOver] = useState(false);\n  const [loadingDow30, setLoadingDow30] = useState(false);\n  const [dateRange, setDateRange] = useState(null);\n  const handleFileSelect = selectedFile => {\n    if (selectedFile && selectedFile.type === 'text/csv') {\n      setFile(selectedFile);\n      setUploadStatus(null);\n    } else {\n      setUploadStatus({\n        type: 'error',\n        message: 'Please select a CSV file'\n      });\n    }\n  };\n  const handleFileChange = e => {\n    handleFileSelect(e.target.files[0]);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    setDragOver(false);\n    handleFileSelect(e.dataTransfer.files[0]);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    setDragOver(true);\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    setDragOver(false);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setUploadStatus({\n        type: 'error',\n        message: 'Please select a file first'\n      });\n      return;\n    }\n    setUploading(true);\n    setUploadStatus(null);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('/api/upload-data/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setUploadStatus({\n        type: 'success',\n        message: `Data uploaded successfully! ${response.data.rows} rows loaded.`\n      });\n      onDataUploaded();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setUploadStatus({\n        type: 'error',\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Upload failed'\n      });\n    } finally {\n      setUploading(false);\n    }\n  };\n  const handleLoadDow30 = async () => {\n    setLoadingDow30(true);\n    setUploadStatus(null);\n    try {\n      const response = await axios.post('/api/load-dow30/');\n      setUploadStatus({\n        type: 'success',\n        message: `Dow Jones 30 data loaded! ${response.data.stocks_loaded.length} stocks, ${response.data.total_dates} dates.`\n      });\n      setDateRange(response.data.date_range);\n      onDataUploaded();\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setUploadStatus({\n        type: 'error',\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Failed to load Dow Jones 30 data'\n      });\n    } finally {\n      setLoadingDow30(false);\n    }\n  };\n  const handleDateRangeChange = async (startDate, endDate) => {\n    try {\n      const response = await axios.post('/api/set-date-range/', {\n        start_date: startDate,\n        end_date: endDate\n      });\n      setUploadStatus({\n        type: 'success',\n        message: `Date range set: ${startDate} to ${endDate}`\n      });\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      setUploadStatus({\n        type: 'error',\n        message: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to set date range'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `upload-area ${dragOver ? 'dragover' : ''}`,\n      onDrop: handleDrop,\n      onDragOver: handleDragOver,\n      onDragLeave: handleDragLeave,\n      onClick: () => document.getElementById('file-input').click(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-icon\",\n        children: \"\\uD83D\\uDCC1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-text\",\n        children: file ? file.name : 'Drop your CSV file here or click to browse'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-text\",\n        style: {\n          fontSize: '14px',\n          color: '#888'\n        },\n        children: \"Required columns: Open, High, Low, Close, Volume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-input\",\n        type: \"file\",\n        accept: \".csv\",\n        onChange: handleFileChange,\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-button\",\n      onClick: handleUpload,\n      disabled: !file || uploading,\n      children: uploading ? 'Uploading...' : 'Upload Data'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: uploadStatus.type === 'success' ? 'success-message' : 'error-message',\n      children: uploadStatus.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(DataUpload, \"6BwIxNw2FbFTpGzYQUXx1rsNZt8=\");\n_c = DataUpload;\nexport default DataUpload;\nvar _c;\n$RefreshReg$(_c, \"DataUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DataUpload","onDataUploaded","_s","file","setFile","uploading","setUploading","uploadStatus","setUploadStatus","dragOver","setDragOver","loadingDow30","setLoadingDow30","dateRange","setDateRange","handleFileSelect","selectedFile","type","message","handleFileChange","e","target","files","handleDrop","preventDefault","dataTransfer","handleDragOver","handleDragLeave","handleUpload","formData","FormData","append","response","post","headers","data","rows","error","_error$response","_error$response$data","handleLoadDow30","stocks_loaded","length","total_dates","date_range","_error$response2","_error$response2$data","handleDateRangeChange","startDate","endDate","start_date","end_date","_error$response3","_error$response3$data","className","children","onDrop","onDragOver","onDragLeave","onClick","document","getElementById","click","fileName","_jsxFileName","lineNumber","columnNumber","name","style","fontSize","color","id","accept","onChange","disabled","_c","$RefreshReg$"],"sources":["/Users/bianyuqi/Desktop/alpha_quest/frontend/src/components/DataUpload.js"],"sourcesContent":["// frontend/src/components/DataUpload.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst DataUpload = ({ onDataUploaded }) => {\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [dragOver, setDragOver] = useState(false);\n  const [loadingDow30, setLoadingDow30] = useState(false);\n  const [dateRange, setDateRange] = useState(null);\n\n  const handleFileSelect = (selectedFile) => {\n    if (selectedFile && selectedFile.type === 'text/csv') {\n      setFile(selectedFile);\n      setUploadStatus(null);\n    } else {\n      setUploadStatus({ type: 'error', message: 'Please select a CSV file' });\n    }\n  };\n\n  const handleFileChange = (e) => {\n    handleFileSelect(e.target.files[0]);\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    setDragOver(false);\n    handleFileSelect(e.dataTransfer.files[0]);\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    setDragOver(true);\n  };\n\n  const handleDragLeave = (e) => {\n    e.preventDefault();\n    setDragOver(false);\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      setUploadStatus({ type: 'error', message: 'Please select a file first' });\n      return;\n    }\n\n    setUploading(true);\n    setUploadStatus(null);\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await axios.post('/api/upload-data/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      setUploadStatus({\n        type: 'success',\n        message: `Data uploaded successfully! ${response.data.rows} rows loaded.`\n      });\n      onDataUploaded();\n    } catch (error) {\n      setUploadStatus({\n        type: 'error',\n        message: error.response?.data?.error || 'Upload failed'\n      });\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleLoadDow30 = async () => {\n    setLoadingDow30(true);\n    setUploadStatus(null);\n\n    try {\n      const response = await axios.post('/api/load-dow30/');\n\n      setUploadStatus({\n        type: 'success',\n        message: `Dow Jones 30 data loaded! ${response.data.stocks_loaded.length} stocks, ${response.data.total_dates} dates.`\n      });\n\n      setDateRange(response.data.date_range);\n      onDataUploaded();\n    } catch (error) {\n      setUploadStatus({\n        type: 'error',\n        message: error.response?.data?.error || 'Failed to load Dow Jones 30 data'\n      });\n    } finally {\n      setLoadingDow30(false);\n    }\n  };\n\n  const handleDateRangeChange = async (startDate, endDate) => {\n    try {\n      const response = await axios.post('/api/set-date-range/', {\n        start_date: startDate,\n        end_date: endDate\n      });\n\n      setUploadStatus({\n        type: 'success',\n        message: `Date range set: ${startDate} to ${endDate}`\n      });\n    } catch (error) {\n      setUploadStatus({\n        type: 'error',\n        message: error.response?.data?.error || 'Failed to set date range'\n      });\n    }\n  };\n\n  return (\n    <div className=\"upload-container\">\n      <div \n        className={`upload-area ${dragOver ? 'dragover' : ''}`}\n        onDrop={handleDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={() => document.getElementById('file-input').click()}\n      >\n        <div className=\"upload-icon\">📁</div>\n        <div className=\"upload-text\">\n          {file ? file.name : 'Drop your CSV file here or click to browse'}\n        </div>\n        <div className=\"upload-text\" style={{ fontSize: '14px', color: '#888' }}>\n          Required columns: Open, High, Low, Close, Volume\n        </div>\n        <input\n          id=\"file-input\"\n          type=\"file\"\n          accept=\".csv\"\n          onChange={handleFileChange}\n          className=\"file-input\"\n        />\n      </div>\n      \n      <button \n        className=\"upload-button\"\n        onClick={handleUpload}\n        disabled={!file || uploading}\n      >\n        {uploading ? 'Uploading...' : 'Upload Data'}\n      </button>\n\n      {uploadStatus && (\n        <div className={uploadStatus.type === 'success' ? 'success-message' : 'error-message'}>\n          {uploadStatus.message}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DataUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}