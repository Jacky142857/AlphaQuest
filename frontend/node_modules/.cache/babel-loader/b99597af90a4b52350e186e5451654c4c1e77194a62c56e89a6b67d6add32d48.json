{"ast":null,"code":"var _jsxFileName = \"/Users/bianyuqi/Desktop/alpha_quest/frontend/src/components/learn/Operators.js\";\nimport React from 'react';\nimport './LearnContent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Operators = () => {\n  const operators = [{\n    name: 'Rank',\n    syntax: 'Rank(expression)',\n    description: 'Cross-sectional ranking of values from 0 to 1',\n    example: 'Rank(Close - Open)',\n    explanation: 'Ranks all stocks by their daily price change, with highest getting 1.0'\n  }, {\n    name: 'Delta',\n    syntax: 'Delta(expression, n)',\n    description: 'Difference between current value and value n periods ago',\n    example: 'Delta(Close, 5)',\n    explanation: 'Current close price minus close price 5 days ago'\n  }, {\n    name: 'Sum',\n    syntax: 'Sum(expression, n)',\n    description: 'Rolling sum over the last n periods',\n    example: 'Sum(Volume, 10)',\n    explanation: 'Total volume over the past 10 trading days'\n  }, {\n    name: 'Ts_Rank',\n    syntax: 'Ts_rank(expression, n)',\n    description: 'Time-series rank of current value within the last n periods',\n    example: 'Ts_rank(Close, 20)',\n    explanation: 'Rank of today\\'s close price within the past 20 days'\n  }, {\n    name: 'Ts_ArgMax',\n    syntax: 'Ts_argmax(expression, n)',\n    description: 'Number of periods since the maximum value in the last n periods',\n    example: 'Ts_argmax(High, 30)',\n    explanation: 'Days since the highest price in the past 30 days'\n  }, {\n    name: 'Abs',\n    syntax: 'Abs(expression)',\n    description: 'Absolute value of the expression',\n    example: 'Abs(Close - Open)',\n    explanation: 'Absolute daily price change, always positive'\n  }, {\n    name: 'Sqrt',\n    syntax: 'Sqrt(expression)',\n    description: 'Square root of the expression',\n    example: 'Sqrt(Volume)',\n    explanation: 'Square root of trading volume'\n  }, {\n    name: 'quantile',\n    syntax: 'quantile(expression, driver=gaussian, sigma=1.0)',\n    description: 'Quantile transformation with distribution mapping',\n    example: 'quantile(Close - Open, driver=gaussian, sigma=0.5)',\n    explanation: 'Transforms daily returns using normal distribution'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"learn-content-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u2699\\uFE0F Mathematical Operators\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"content-section\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Operators are functions that transform market data into alpha signals. They can be applied to individual data fields or combined expressions.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"operators-grid\",\n      children: operators.map((op, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"operator-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"operator-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"operator-name\",\n            children: op.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n            className: \"operator-syntax\",\n            children: op.syntax\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"operator-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"operator-description\",\n            children: op.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"operator-example\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Example:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"example-code\",\n              children: op.example\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"example-explanation\",\n              children: op.explanation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Combining Operators\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Operators can be nested and combined to create sophisticated alpha formulas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"combination-examples\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combo-example\",\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            className: \"formula-code\",\n            children: \"Rank(Sum(Close - Open, 5))\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ranks stocks by their 5-day cumulative price change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combo-example\",\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            className: \"formula-code\",\n            children: \"Delta(Rank(Close), 1) * Sqrt(Volume)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Change in rank weighted by volume strength\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combo-example\",\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            className: \"formula-code\",\n            children: \"Abs(Ts_rank(Close, 20) - 0.5)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Distance from median rank over 20-day window\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tips for Using Operators\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"operator-tips\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), \" is essential for creating market-neutral signals\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Delta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), \" helps capture momentum and mean reversion\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Time-series functions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), \" (Ts_rank, Ts_argmax) add temporal context\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Mathematical functions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), \" (Abs, Sqrt) help normalize distributions\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"quantile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), \" is powerful for creating normally-distributed signals\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_c = Operators;\nexport default Operators;\nvar _c;\n$RefreshReg$(_c, \"Operators\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Operators","operators","name","syntax","description","example","explanation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","op","index","_c","$RefreshReg$"],"sources":["/Users/bianyuqi/Desktop/alpha_quest/frontend/src/components/learn/Operators.js"],"sourcesContent":["import React from 'react';\nimport './LearnContent.css';\n\nconst Operators = () => {\n  const operators = [\n    {\n      name: 'Rank',\n      syntax: 'Rank(expression)',\n      description: 'Cross-sectional ranking of values from 0 to 1',\n      example: 'Rank(Close - Open)',\n      explanation: 'Ranks all stocks by their daily price change, with highest getting 1.0'\n    },\n    {\n      name: 'Delta',\n      syntax: 'Delta(expression, n)',\n      description: 'Difference between current value and value n periods ago',\n      example: 'Delta(Close, 5)',\n      explanation: 'Current close price minus close price 5 days ago'\n    },\n    {\n      name: 'Sum',\n      syntax: 'Sum(expression, n)',\n      description: 'Rolling sum over the last n periods',\n      example: 'Sum(Volume, 10)',\n      explanation: 'Total volume over the past 10 trading days'\n    },\n    {\n      name: 'Ts_Rank',\n      syntax: 'Ts_rank(expression, n)',\n      description: 'Time-series rank of current value within the last n periods',\n      example: 'Ts_rank(Close, 20)',\n      explanation: 'Rank of today\\'s close price within the past 20 days'\n    },\n    {\n      name: 'Ts_ArgMax',\n      syntax: 'Ts_argmax(expression, n)',\n      description: 'Number of periods since the maximum value in the last n periods',\n      example: 'Ts_argmax(High, 30)',\n      explanation: 'Days since the highest price in the past 30 days'\n    },\n    {\n      name: 'Abs',\n      syntax: 'Abs(expression)',\n      description: 'Absolute value of the expression',\n      example: 'Abs(Close - Open)',\n      explanation: 'Absolute daily price change, always positive'\n    },\n    {\n      name: 'Sqrt',\n      syntax: 'Sqrt(expression)',\n      description: 'Square root of the expression',\n      example: 'Sqrt(Volume)',\n      explanation: 'Square root of trading volume'\n    },\n    {\n      name: 'quantile',\n      syntax: 'quantile(expression, driver=gaussian, sigma=1.0)',\n      description: 'Quantile transformation with distribution mapping',\n      example: 'quantile(Close - Open, driver=gaussian, sigma=0.5)',\n      explanation: 'Transforms daily returns using normal distribution'\n    }\n  ];\n\n  return (\n    <div className=\"learn-content-wrapper\">\n      <h2>⚙️ Mathematical Operators</h2>\n\n      <section className=\"content-section\">\n        <p>\n          Operators are functions that transform market data into alpha signals.\n          They can be applied to individual data fields or combined expressions.\n        </p>\n      </section>\n\n      <div className=\"operators-grid\">\n        {operators.map((op, index) => (\n          <div key={index} className=\"operator-card\">\n            <div className=\"operator-header\">\n              <h3 className=\"operator-name\">{op.name}</h3>\n              <code className=\"operator-syntax\">{op.syntax}</code>\n            </div>\n\n            <div className=\"operator-content\">\n              <p className=\"operator-description\">{op.description}</p>\n\n              <div className=\"operator-example\">\n                <h4>Example:</h4>\n                <code className=\"example-code\">{op.example}</code>\n                <p className=\"example-explanation\">{op.explanation}</p>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <section className=\"content-section\">\n        <h3>Combining Operators</h3>\n        <p>Operators can be nested and combined to create sophisticated alpha formulas:</p>\n\n        <div className=\"combination-examples\">\n          <div className=\"combo-example\">\n            <code className=\"formula-code\">\n              Rank(Sum(Close - Open, 5))\n            </code>\n            <p>Ranks stocks by their 5-day cumulative price change</p>\n          </div>\n\n          <div className=\"combo-example\">\n            <code className=\"formula-code\">\n              Delta(Rank(Close), 1) * Sqrt(Volume)\n            </code>\n            <p>Change in rank weighted by volume strength</p>\n          </div>\n\n          <div className=\"combo-example\">\n            <code className=\"formula-code\">\n              Abs(Ts_rank(Close, 20) - 0.5)\n            </code>\n            <p>Distance from median rank over 20-day window</p>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"content-section\">\n        <h3>Tips for Using Operators</h3>\n        <ul className=\"operator-tips\">\n          <li><strong>Rank</strong> is essential for creating market-neutral signals</li>\n          <li><strong>Delta</strong> helps capture momentum and mean reversion</li>\n          <li><strong>Time-series functions</strong> (Ts_rank, Ts_argmax) add temporal context</li>\n          <li><strong>Mathematical functions</strong> (Abs, Sqrt) help normalize distributions</li>\n          <li><strong>quantile</strong> is powerful for creating normally-distributed signals</li>\n        </ul>\n      </section>\n    </div>\n  );\n};\n\nexport default Operators;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAMC,SAAS,GAAG,CAChB;IACEC,IAAI,EAAE,MAAM;IACZC,MAAM,EAAE,kBAAkB;IAC1BC,WAAW,EAAE,+CAA+C;IAC5DC,OAAO,EAAE,oBAAoB;IAC7BC,WAAW,EAAE;EACf,CAAC,EACD;IACEJ,IAAI,EAAE,OAAO;IACbC,MAAM,EAAE,sBAAsB;IAC9BC,WAAW,EAAE,0DAA0D;IACvEC,OAAO,EAAE,iBAAiB;IAC1BC,WAAW,EAAE;EACf,CAAC,EACD;IACEJ,IAAI,EAAE,KAAK;IACXC,MAAM,EAAE,oBAAoB;IAC5BC,WAAW,EAAE,qCAAqC;IAClDC,OAAO,EAAE,iBAAiB;IAC1BC,WAAW,EAAE;EACf,CAAC,EACD;IACEJ,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,wBAAwB;IAChCC,WAAW,EAAE,6DAA6D;IAC1EC,OAAO,EAAE,oBAAoB;IAC7BC,WAAW,EAAE;EACf,CAAC,EACD;IACEJ,IAAI,EAAE,WAAW;IACjBC,MAAM,EAAE,0BAA0B;IAClCC,WAAW,EAAE,iEAAiE;IAC9EC,OAAO,EAAE,qBAAqB;IAC9BC,WAAW,EAAE;EACf,CAAC,EACD;IACEJ,IAAI,EAAE,KAAK;IACXC,MAAM,EAAE,iBAAiB;IACzBC,WAAW,EAAE,kCAAkC;IAC/CC,OAAO,EAAE,mBAAmB;IAC5BC,WAAW,EAAE;EACf,CAAC,EACD;IACEJ,IAAI,EAAE,MAAM;IACZC,MAAM,EAAE,kBAAkB;IAC1BC,WAAW,EAAE,+BAA+B;IAC5CC,OAAO,EAAE,cAAc;IACvBC,WAAW,EAAE;EACf,CAAC,EACD;IACEJ,IAAI,EAAE,UAAU;IAChBC,MAAM,EAAE,kDAAkD;IAC1DC,WAAW,EAAE,mDAAmD;IAChEC,OAAO,EAAE,oDAAoD;IAC7DC,WAAW,EAAE;EACf,CAAC,CACF;EAED,oBACEP,OAAA;IAAKQ,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCT,OAAA;MAAAS,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElCb,OAAA;MAASQ,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAClCT,OAAA;QAAAS,QAAA,EAAG;MAGH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAEVb,OAAA;MAAKQ,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BP,SAAS,CAACY,GAAG,CAAC,CAACC,EAAE,EAAEC,KAAK,kBACvBhB,OAAA;QAAiBQ,SAAS,EAAC,eAAe;QAAAC,QAAA,gBACxCT,OAAA;UAAKQ,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BT,OAAA;YAAIQ,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAEM,EAAE,CAACZ;UAAI;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5Cb,OAAA;YAAMQ,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAEM,EAAE,CAACX;UAAM;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eAENb,OAAA;UAAKQ,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/BT,OAAA;YAAGQ,SAAS,EAAC,sBAAsB;YAAAC,QAAA,EAAEM,EAAE,CAACV;UAAW;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAExDb,OAAA;YAAKQ,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/BT,OAAA;cAAAS,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBb,OAAA;cAAMQ,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAEM,EAAE,CAACT;YAAO;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAClDb,OAAA;cAAGQ,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EAAEM,EAAE,CAACR;YAAW;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GAdEG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAeV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENb,OAAA;MAASQ,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAClCT,OAAA;QAAAS,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5Bb,OAAA;QAAAS,QAAA,EAAG;MAA4E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEnFb,OAAA;QAAKQ,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnCT,OAAA;UAAKQ,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BT,OAAA;YAAMQ,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAC;UAE/B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACPb,OAAA;YAAAS,QAAA,EAAG;UAAmD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,eAENb,OAAA;UAAKQ,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BT,OAAA;YAAMQ,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAC;UAE/B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACPb,OAAA;YAAAS,QAAA,EAAG;UAA0C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eAENb,OAAA;UAAKQ,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BT,OAAA;YAAMQ,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAC;UAE/B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACPb,OAAA;YAAAS,QAAA,EAAG;UAA4C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEVb,OAAA;MAASQ,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAClCT,OAAA;QAAAS,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjCb,OAAA;QAAIQ,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC3BT,OAAA;UAAAS,QAAA,gBAAIT,OAAA;YAAAS,QAAA,EAAQ;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,qDAAiD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/Eb,OAAA;UAAAS,QAAA,gBAAIT,OAAA;YAAAS,QAAA,EAAQ;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,8CAA0C;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzEb,OAAA;UAAAS,QAAA,gBAAIT,OAAA;YAAAS,QAAA,EAAQ;UAAqB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,8CAA0C;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzFb,OAAA;UAAAS,QAAA,gBAAIT,OAAA;YAAAS,QAAA,EAAQ;UAAsB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,6CAAyC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzFb,OAAA;UAAAS,QAAA,gBAAIT,OAAA;YAAAS,QAAA,EAAQ;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,0DAAsD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACI,EAAA,GApIIhB,SAAS;AAsIf,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}