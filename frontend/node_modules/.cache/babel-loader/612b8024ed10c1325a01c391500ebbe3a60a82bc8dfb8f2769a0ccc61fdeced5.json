{"ast":null,"code":"var _jsxFileName = \"/Users/bianyuqi/Desktop/alpha_quest/frontend/src/components/AlphaFormula.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/AlphaFormula.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlphaFormula = ({\n  onResult,\n  isDataUploaded,\n  setLoading,\n  strategySettings\n}) => {\n  _s();\n  const [formula, setFormula] = useState('');\n  const [error, setError] = useState(null);\n  const exampleFormulas = ['Close / (Close - 0.00000001)', 'Rank(Delta(Close, 1))', 'Rank(Ts_rank(Close, 5) * Ts_rank(Volume, 10))', 'Delta(Close, 1) / Close', 'Rank(High - Low)', 'Sum(Volume, 5) / Volume', 'Abs(Delta(Close, 2))', 'Sqrt(Volume / Sum(Volume, 10))', 'Rank(Vwap - Close)'];\n  const handleSubmit = async () => {\n    if (!formula.trim()) {\n      setError('Please enter an alpha formula');\n      return;\n    }\n    if (!isDataUploaded) {\n      setError('Please upload data first');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post('/api/calculate-alpha/', {\n        alpha_formula: formula,\n        settings: strategySettings\n      });\n      onResult(response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Calculation failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleExampleClick = exampleFormula => {\n    setFormula(exampleFormula);\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alpha-formula-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Alpha Formula\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"formula-input\",\n      value: formula,\n      onChange: e => setFormula(e.target.value),\n      placeholder: \"Enter your alpha formula here...\\nExample: Close / (Close - 0.00000001) Available functions:\\n- Rank(x): Ranks values\\n- Delta(x, n): Difference with n periods ago\\n- Sum(x, n): Rolling sum over n periods\\n- Abs(x): Absolute values\\n- Sqrt(x): Square root\\n- Ts_rank(x, n): Time series rank\\n- Ts_argmax(x, n): Time series argmax\\n- quantile(x, driver='gaussian', sigma=1.0): Apply distribution transformation * driver: 'gaussian', 'uniform', 'cauchy' * sigma: scale parameter Available variables:\\n- Open, High, Low, Close, Volume, Vwap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: handleSubmit,\n      disabled: !formula.trim() || !isDataUploaded,\n      children: \"Calculate Alpha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formula-examples\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Example Formulas (click to use):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: exampleFormulas.map((example, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleExampleClick(example),\n          title: \"Click to use this formula\",\n          children: example\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(AlphaFormula, \"HRzU+TVYeI/dHrzEnP1xseX9aZQ=\");\n_c = AlphaFormula;\nexport default AlphaFormula;\nvar _c;\n$RefreshReg$(_c, \"AlphaFormula\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AlphaFormula","onResult","isDataUploaded","setLoading","strategySettings","_s","formula","setFormula","error","setError","exampleFormulas","handleSubmit","trim","response","post","alpha_formula","settings","data","_error$response","_error$response$data","handleExampleClick","exampleFormula","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","disabled","map","example","index","title","_c","$RefreshReg$"],"sources":["/Users/bianyuqi/Desktop/alpha_quest/frontend/src/components/AlphaFormula.js"],"sourcesContent":["// frontend/src/components/AlphaFormula.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AlphaFormula = ({ onResult, isDataUploaded, setLoading, strategySettings }) => {\n  const [formula, setFormula] = useState('');\n  const [error, setError] = useState(null);\n\n  const exampleFormulas = [\n    'Close / (Close - 0.00000001)',\n    'Rank(Delta(Close, 1))',\n    'Rank(Ts_rank(Close, 5) * Ts_rank(Volume, 10))',\n    'Delta(Close, 1) / Close',\n    'Rank(High - Low)',\n    'Sum(Volume, 5) / Volume',\n    'Abs(Delta(Close, 2))',\n    'Sqrt(Volume / Sum(Volume, 10))',\n    'Rank(Vwap - Close)'\n  ];\n\n  const handleSubmit = async () => {\n    if (!formula.trim()) {\n      setError('Please enter an alpha formula');\n      return;\n    }\n\n    if (!isDataUploaded) {\n      setError('Please upload data first');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await axios.post('/api/calculate-alpha/', {\n        alpha_formula: formula,\n        settings: strategySettings\n      });\n\n      onResult(response.data);\n    } catch (error) {\n      setError(error.response?.data?.error || 'Calculation failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleExampleClick = (exampleFormula) => {\n    setFormula(exampleFormula);\n    setError(null);\n  };\n\n  return (\n    <div className=\"alpha-formula-container\">\n      <h2>Alpha Formula</h2>\n      \n      <textarea\n        className=\"formula-input\"\n        value={formula}\n        onChange={(e) => setFormula(e.target.value)}\n        placeholder=\"Enter your alpha formula here...\nExample: Close / (Close - 0.00000001)\n\nAvailable functions:\n- Rank(x): Ranks values\n- Delta(x, n): Difference with n periods ago\n- Sum(x, n): Rolling sum over n periods\n- Abs(x): Absolute values\n- Sqrt(x): Square root\n- Ts_rank(x, n): Time series rank\n- Ts_argmax(x, n): Time series argmax\n- quantile(x, driver='gaussian', sigma=1.0): Apply distribution transformation\n  * driver: 'gaussian', 'uniform', 'cauchy'\n  * sigma: scale parameter\n\nAvailable variables:\n- Open, High, Low, Close, Volume, Vwap\"\n      />\n      \n      {error && (\n        <div className=\"error-message\">\n          {error}\n        </div>\n      )}\n      \n      <button \n        className=\"submit-button\"\n        onClick={handleSubmit}\n        disabled={!formula.trim() || !isDataUploaded}\n      >\n        Calculate Alpha\n      </button>\n\n      <div className=\"formula-examples\">\n        <h3>Example Formulas (click to use):</h3>\n        <ul>\n          {exampleFormulas.map((example, index) => (\n            <li \n              key={index} \n              onClick={() => handleExampleClick(example)}\n              title=\"Click to use this formula\"\n            >\n              {example}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default AlphaFormula;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}