{"ast":null,"code":"var _jsxFileName = \"/Users/bianyuqi/Desktop/alpha_quest/frontend/src/components/Simulate.js\",\n  _s = $RefreshSig$();\n// Simulate.js - The current simulation functionality moved to a separate component\nimport React, { useState } from 'react';\nimport AlphaFormula from './AlphaFormula';\nimport PnLChart from './PnLChart';\nimport DataUpload from './DataUpload';\nimport Settings from './Settings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Simulate() {\n  _s();\n  const [pnlData, setPnlData] = useState(null);\n  const [metrics, setMetrics] = useState(null);\n  const [isDataUploaded, setIsDataUploaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const [dataUploadOpen, setDataUploadOpen] = useState(false);\n  const [strategySettings, setStrategySettings] = useState({\n    neutralization: 'Subindustry',\n    decay: 4,\n    truncation: 0.08,\n    pasteurization: 'On',\n    nanHandling: 'Off',\n    maxTrade: 'Off',\n    delay: 1,\n    commission: 0.001,\n    bookSize: 1000000,\n    minWeight: 0.01,\n    maxWeight: 0.05,\n    rebalanceFreq: 'Daily'\n  });\n  const handleDataUpload = () => {\n    setIsDataUploaded(true);\n    setPnlData(null);\n    setMetrics(null);\n  };\n  const handleAlphaResult = result => {\n    setPnlData(result.pnl_data);\n    setMetrics(result.metrics);\n  };\n  const handleSettingsChange = newSettings => {\n    setStrategySettings(newSettings);\n  };\n  const toggleSettings = () => {\n    setSettingsOpen(!settingsOpen);\n  };\n  const toggleDataUpload = () => {\n    setDataUploadOpen(!dataUploadOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simulate-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-controls\",\n          children: [/*#__PURE__*/_jsxDEV(Settings, {\n            onSettingsChange: handleSettingsChange,\n            isOpen: settingsOpen,\n            onToggle: toggleSettings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DataUpload, {\n            onDataUploaded: handleDataUpload,\n            isOpen: dataUploadOpen,\n            onToggle: toggleDataUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AlphaFormula, {\n          onResult: handleAlphaResult,\n          isDataUploaded: isDataUploaded,\n          setLoading: setLoading,\n          strategySettings: strategySettings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: /*#__PURE__*/_jsxDEV(PnLChart, {\n          data: pnlData,\n          metrics: metrics,\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Simulate, \"J3NdUUqLpF4Q1Uc4pobi5Ih/0fg=\");\n_c = Simulate;\nexport default Simulate;\nvar _c;\n$RefreshReg$(_c, \"Simulate\");","map":{"version":3,"names":["React","useState","AlphaFormula","PnLChart","DataUpload","Settings","jsxDEV","_jsxDEV","Simulate","_s","pnlData","setPnlData","metrics","setMetrics","isDataUploaded","setIsDataUploaded","loading","setLoading","settingsOpen","setSettingsOpen","dataUploadOpen","setDataUploadOpen","strategySettings","setStrategySettings","neutralization","decay","truncation","pasteurization","nanHandling","maxTrade","delay","commission","bookSize","minWeight","maxWeight","rebalanceFreq","handleDataUpload","handleAlphaResult","result","pnl_data","handleSettingsChange","newSettings","toggleSettings","toggleDataUpload","className","children","onSettingsChange","isOpen","onToggle","fileName","_jsxFileName","lineNumber","columnNumber","onDataUploaded","onResult","data","_c","$RefreshReg$"],"sources":["/Users/bianyuqi/Desktop/alpha_quest/frontend/src/components/Simulate.js"],"sourcesContent":["// Simulate.js - The current simulation functionality moved to a separate component\nimport React, { useState } from 'react';\nimport AlphaFormula from './AlphaFormula';\nimport PnLChart from './PnLChart';\nimport DataUpload from './DataUpload';\nimport Settings from './Settings';\n\nfunction Simulate() {\n  const [pnlData, setPnlData] = useState(null);\n  const [metrics, setMetrics] = useState(null);\n  const [isDataUploaded, setIsDataUploaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const [dataUploadOpen, setDataUploadOpen] = useState(false);\n  const [strategySettings, setStrategySettings] = useState({\n    neutralization: 'Subindustry',\n    decay: 4,\n    truncation: 0.08,\n    pasteurization: 'On',\n    nanHandling: 'Off',\n    maxTrade: 'Off',\n    delay: 1,\n    commission: 0.001,\n    bookSize: 1000000,\n    minWeight: 0.01,\n    maxWeight: 0.05,\n    rebalanceFreq: 'Daily'\n  });\n\n  const handleDataUpload = () => {\n    setIsDataUploaded(true);\n    setPnlData(null);\n    setMetrics(null);\n  };\n\n  const handleAlphaResult = (result) => {\n    setPnlData(result.pnl_data);\n    setMetrics(result.metrics);\n  };\n\n  const handleSettingsChange = (newSettings) => {\n    setStrategySettings(newSettings);\n  };\n\n  const toggleSettings = () => {\n    setSettingsOpen(!settingsOpen);\n  };\n\n  const toggleDataUpload = () => {\n    setDataUploadOpen(!dataUploadOpen);\n  };\n\n  return (\n    <div className=\"simulate-container\">\n      <div className=\"main-content\">\n        <div className=\"left-panel\">\n          <div className=\"panel-controls\">\n            <Settings\n              onSettingsChange={handleSettingsChange}\n              isOpen={settingsOpen}\n              onToggle={toggleSettings}\n            />\n            <DataUpload\n              onDataUploaded={handleDataUpload}\n              isOpen={dataUploadOpen}\n              onToggle={toggleDataUpload}\n            />\n          </div>\n          <AlphaFormula\n            onResult={handleAlphaResult}\n            isDataUploaded={isDataUploaded}\n            setLoading={setLoading}\n            strategySettings={strategySettings}\n          />\n        </div>\n\n        <div className=\"right-panel\">\n          <PnLChart\n            data={pnlData}\n            metrics={metrics}\n            loading={loading}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Simulate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}